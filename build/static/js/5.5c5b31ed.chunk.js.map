{"version":3,"sources":["pages/TablePage.js"],"names":["TablePage","state","peoplecountfromgym","done","firebase","auth","onAuthStateChanged","user","console","log","setTimeout","fetch","then","response","json","setState","db","collection","doc","orderBy","limit","get","snapshot","forEach","data","push","People","parseInt","catch","error","window","scrollTo","this","title","breadcrumbs","name","active","className","style","type","color","class","striped","bordered","hover","map","classname","Month","Day","Year","Hour","Minute","Location","DashboardPage"],"mappings":"qPAUMA,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,mBAAoB,KACpBC,MAAM,GAJI,E,gEASO,IAAD,OAElBC,IAASC,OAAOC,oBAAmB,SAASC,GACtCA,EACFC,QAAQC,IAAIF,GAEZC,QAAQC,IAAI,WAIhBC,YAAW,WACTC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAAEZ,MAAM,SACrC,MAGUa,IAAGC,WAAW,gBAAgBC,IAAI,sBAAsBD,WAAW,eAAeE,QAAQ,YAAa,QAAQC,MAAM,GAC3HC,MAAMT,MAAK,SAAAU,GAChB,IAAMpB,EAAqB,GAC3BoB,EAASC,SAAS,SAAAL,GAChBV,QAAQC,IAAIS,EAAIM,QAChB,IAAMA,EAAON,EAAIM,OACjBtB,EAAmBuB,KAAKD,MAE1B,EAAKT,SAAS,CAACb,mBAAoD,WAA9BA,EAAmBwB,OAAsBC,SAASzB,EAAmBwB,QAAUxB,EAAmBwB,SACvI,EAAKX,SAAS,CAAEb,mBAAqBA,OAGtC0B,OAAO,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,MAC7BC,OAAOC,SAAS,EAAG,K,+BAMnB,OAAIC,KAAK/B,MAAME,KAUf,kBAAC,IAAD,CAAM8B,MAAO,GAAGC,YAAa,CAAC,CAAEC,KAAM,UAAWC,QAAQ,IAASC,UAAU,WAI9EL,KAAK/B,MAAME,KAGD,kBAAC,IAAD,KACA,6BACH,6BACG,wBAAImC,MAAO,CAAC,WAAc,oCAAqC,SAAY,OAAQ,WAAc,OAAQ,MAAS,YAAlH,aACA,+BANF,kBAAC,IAAD,CAAcC,KAAM,OAAQC,MAAO,YAWzC,yBAAKC,MAAM,gBACX,kBAAC,IAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACN,MAAO,CAAC,aAAgB,SACpD,4BACE,sCACA,sCACA,0CACA,yCAGF,2BAAOA,MAAO,CAAC,WAAc,kBAEvBN,KAAK/B,MAAMC,oBACP8B,KAAK/B,MAAMC,mBAAmB2C,KAAK,SAAA3C,GACjC,OACE,4BACA,wBAAI4C,UAAY,QAAhB,IAAyB5C,EAAmB6C,MAA5C,IAAoD7C,EAAmB8C,IAAvE,IAA6E9C,EAAmB+C,MAChG,gCAAM/C,EAAmBgD,KAAzB,IAAgChD,EAAmBiD,QACnD,gCAAMjD,EAAmBkD,SAAzB,KACA,gCAAMlD,EAAmBwB,OAAzB,aA1CV,4C,GAjDc2B,WA0GTrD","file":"static/js/5.5c5b31ed.chunk.js","sourcesContent":["import { Table } from 'reactstrap';\nimport Page from 'components/Page';\nimport React from 'react';\nimport db from './firebase'\nimport ReactLoading from 'react-loading'\nimport FadeIn from 'react-fade-in'\nimport DashboardPage from './DashboardPage';\nimport firebase from 'firebase'\n\n\nclass TablePage extends DashboardPage {\n\n  constructor() {\n    super();\n    this.state = {\n      peoplecountfromgym: null,\n      done: false\n      }\n    }\n\n\n  componentDidMount() {\n\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        console.log(user)\n      } else {\n        console.log('none')\n      }\n    });\n\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then(response => response.json())\n        .then(json => this.setState({ done: true }));\n    }, 1200);\n\n\n    var people = db.collection('gtuniversity').doc('peoplecountfromgym').collection('peoplecount').orderBy(\"timestamp\", 'desc').limit(1)\n    people.get().then(snapshot => {\n      const peoplecountfromgym = []\n      snapshot.forEach( doc => {\n        console.log(doc.data())\n        const data = doc.data()\n        peoplecountfromgym.push(data)\n      })\n      this.setState({peoplecountfromgym :  peoplecountfromgym.People === 'number' ? parseInt(peoplecountfromgym.People) : peoplecountfromgym.People});      \n      this.setState({ peoplecountfromgym : peoplecountfromgym })\n\n    }) \n    .catch( error => console.log(error))\n    window.scrollTo(0, 0);\n  }\n\n\n  render() {\n\n    if(!this.state.done) {\n      return (\n          <div>\n              Loading \n          </div>\n      )\n  } else {\n\n    return (\n\n    <Page title= \"\" breadcrumbs={[{ name: 'Reports', active: true }]} className=\"Reports\" >\n\n\n\n{!this.state.done ? (\n          <ReactLoading type={'bars'} color={\"#6B7CF7\"} />\n        ) : (\n            <FadeIn>\n            <div>\n         <br></br>\n            <h1 style={{'fontFamily': '-apple-system, BlinkMacSystemFont', 'fontSize': '35px', 'fontWeight': 'bold', 'color': '#0A0D18'}}> Reports </h1>\n            <br></br>\n            </div>\n            </FadeIn>\n            )}\n\n    <div class=\"tableFixHead\">\n    <Table striped bordered hover style={{'borderRadius': '50px'}}>\n      <tr>\n        <th> Date </th>\n        <th> Time </th>\n        <th> Location </th>\n        <th> People </th>\n      </tr>\n      \n      <tbody style={{'fontFamily': '-apple-system'}}>\n        {\n            this.state.peoplecountfromgym &&\n                this.state.peoplecountfromgym.map( peoplecountfromgym => {\n                  return (\n                    <tr> \n                    <td classname = \"mb-3\"> {peoplecountfromgym.Month}/{peoplecountfromgym.Day}/{peoplecountfromgym.Year}</td>\n                    <td> {peoplecountfromgym.Hour}:{peoplecountfromgym.Minute}</td>\n                    <td> {peoplecountfromgym.Location} </td>\n                    <td> {peoplecountfromgym.People} </td>\n                    </tr>\n                  )\n                })\n              }\n              \n    </tbody>\n    </Table>\n    </div>\n        </Page>\n      );\n    };\n  }\n}\n\nexport default TablePage;\n\n\n"],"sourceRoot":""}