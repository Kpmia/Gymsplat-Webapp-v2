{"version":3,"sources":["pages/UpdateUserInfo.js"],"names":["UpdateUserInfo","changeEmail","event","setState","email","target","value","changeDisplayName","console","log","displayName","addProfilePic","profilePic","addPhoneNumber","phoneNumber","changePassword","password","confirmOldPass","oldPassword","confirmOldEmail","oldEmail","openModal","closeModal","openModalPassword","closeModalPassword","updateUserDisplayName","checkLoggedUser","user","firebase","auth","currentUser","state","updateProfile","then","alert","updateUserNameFB","currentName","catch","error","message","updateUserPassword","signInWithEmailAndPassword","currentEmail","userCredential","updatePassword","toString","err","updateUserEmail","updateEmail","checkUser","nameone","database","ref","on","uid","update","name","emailone","onAuthStateChanged","this","title","breadcrumbs","active","className","style","lg","md","sm","xs","onChange","required","placeholder","onClick","id","type","classNames","overlay","modal","open","onClose","center","class","React","Component"],"mappings":"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","file":"static/js/7.84b6fce3.chunk.js","sourcesContent":["import React from 'react';\nimport firebase from 'firebase';\nimport { Button, Label, Input, Col, Row, Card, CardBody, Form } from 'reactstrap';\nimport Page from 'components/Page';\nimport FadeIn from 'react-fade-in';\nimport Modal from 'react-responsive-modal'\n\n\n\n\n\nclass UpdateUserInfo extends React.Component {\n\n    constructor() {\n        super();\n        this.state={\n            currentUser: [],\n            oldEmail: '',\n            email: '',\n            displayName: '',\n            profilePic: '',\n            oldPassword: '',\n            phoneNumber: '',\n            password: '',\n            openModal: false,\n            openModalPassword: false,\n            checkUser: true\n        }\n    }\n\n    changeEmail = event => {\n        this.setState({ email : event.target.value })\n    }\n\n    changeDisplayName = event => {\n        console.log(event.target.value)\n        this.setState({ displayName : event.target.value })\n    }\n\n    addProfilePic = event => {\n        this.setState({ profilePic : event.target.value })\n    }\n\n    addPhoneNumber = event => {\n        this.setState({ phoneNumber : event.target.value })\n    }\n\n    changePassword = event => {\n        console.log(event.target.value)\n        this.setState({ password : event.target.value })\n    }\n\n    confirmOldPass = event => {\n        this.setState({ oldPassword : event.target.value })\n    }\n\n    confirmOldEmail = event => {\n        this.setState({ oldEmail : event.target.value })\n    }\n\n    openModal = event => {\n        this.setState({ openModal : true })\n    }\n    \n    closeModal = event => {\n        this.setState({ openModal : false })\n    }\n\n    openModalPassword = event => {\n        this.setState({ openModalPassword : true })\n    }\n\n    closeModalPassword = event => {\n        this.setState({ openModalPassword : false })\n    }\n\n    updateUserNameFB(nameone) {\n        const database = firebase.database();\n\n        database.ref('crc/users').on('value', event => {\n\n            let currentUser = firebase.auth().currentUser\n\n            database.ref('crc/users/' + currentUser.uid).update({\n                name: nameone\n            })\n        })\n    }\n\n\n    updateUserEmail(emailone) {\n        const database = firebase.database();\n\n        database.ref('crc/users').on('value', event => {\n\n            let currentUser = firebase.auth().currentUser\n\n            console.log(currentUser)\n\n            database.ref('crc/users/' + currentUser.uid).update({\n                email: emailone\n            })\n        })\n    }\n\n    checkLoggedUser() {\n\n        firebase.auth().onAuthStateChanged(event => {\n            if (true) {\n                this.setState({ currentName : event.displayName })\n                this.setState({ currentEmail : event.email })\n                \n            } else {\n              console.log('none')\n            }\n          });\n    }\n\n    updateUserDisplayName = event => {\n\n        this.checkLoggedUser();\n\n        var user = firebase.auth().currentUser;\n\n        if (this.state.displayName == \"\") {\n            alert('Fill out a name.')\n            return;\n        }\n\n        user.updateProfile({\n            displayName: this.state.displayName\n            }).then(event => {\n                console.log(user)\n                alert('Success!')\n                this.updateUserNameFB(this.state.displayName)\n                this.setState({ currentName : user.displayName })\n\n            }).catch(function(error) {\n                alert(error.message)\n                return;\n            });\n    }\n\n    updateUserPassword = event => {\n\n        if (this.state.password == \"\") {\n            alert('Please fill out the field.')\n            return;\n        }\n        if (this.state.password == this.state.oldPassword) {\n            alert('You cannot have the same password.')\n        }\n\n        this.checkLoggedUser();\n\n        firebase.auth().signInWithEmailAndPassword(this.state.currentEmail, this.state.oldPassword)\n        .then(userCredential => {\n\n            var user = firebase.auth().currentUser\n\n            user.updatePassword(\n                this.state.password.toString()\n            ) .then (event => {\n                console.log(event)\n                alert('Success!')\n                return;\n            })\n        })  .catch ( err => {\n            alert(err.message)\n            return;\n        })\n    }\n\n    updateUserEmail = event => {\n        if (this.state.email == \"\") {\n            alert('Fill out an email.')\n            return;\n        }\n        if (this.state.email == this.state.currentEmail) {\n            alert('You cannot use the same email.')\n            return;\n        }\n\n        firebase.auth().signInWithEmailAndPassword(this.state.currentEmail, this.state.oldPassword)\n        .then(userCredential => {\n\n            var user = firebase.auth().currentUser\n            \n            \n            user.updateEmail(\n                this.state.email.toString()\n            ) .then(event => {\n                alert('Success!')\n                this.setState({ currentEmail : this.state.email })\n                return;\n   \n            })})\n        .catch(err => {\n             alert(err.message)\n             return;\n        })\n    }\n\n\n    componentDidMount() {\n        this.checkLoggedUser()\n\n    }\n    render() {\n\n\n        return (\n\n            <Page title= \"\" breadcrumbs={[{ name: 'User Profile', active: true }]} className=\"User Profile\" >\n\n\n                        <FadeIn>\n                        <div>\n                    <br></br>\n                        <h1 style={{'fontFamily': '-apple-system, BlinkMacSystemFont', 'fontSize': '35px', 'fontWeight': 'bold', 'color': '#0A0D18'}}> Update Profile </h1>\n                        <br></br>\n                        </div>\n                        </FadeIn>\n\n                <Row>\n\n                <Col lg={7} md={6} sm={6} xs={12} >\n\n\n                <Form> \n                 <div className=\"form-group\">\n                     <label style={{'fontFamily': 'BlinkMacSystemFont'}}> Email address</label>\n                     <Input  onChange={this.changeEmail} required className=\"form-control\" placeholder=\"Enter email\" email=\"email\" />\n\n                     <Button onClick={this.openModal} className=\"btn-block border-0\" style={{'color': 'white'}}> Update </Button>\n\n                     </div>\n\n\n\n                 <Row>\n                  <Col>\n                  <div className=\"form-group\">\n                     <label> Display Name </label>\n                     <Input  onChange={this.changeDisplayName}   placeholder=\"Enter name\" />\n                 </div>\n                     <Button onClick={this.updateUserDisplayName} className=\"btn-block border-0\" style={{'color': 'white'}}> Update </Button>\n                 </Col>\n                 <Col>\n\n                 <div className=\"form-group\">\n                     <label> Enter new password </label>\n                     <Input onChange={this.changePassword} id=\"phone\" name=\"phone\" type=\"tel\" required className=\"form-control\" placeholder=\"Enter password\" />\n                 </div>\n\n                 <Button onClick={this.openModalPassword} className=\"btn-block border-0\" style={{'color': 'white'}}> Update Password </Button>\n\n\n\n                 </Col>\n                 </Row>\n\n                 <Row>\n\n                <Col>\n\n\n                 </Col>\n                 </Row>\n\n                 <Modal \n                        classNames={{\n                        overlay: 'customOverlay',\n                        modal: 'customModal',\n                        }} open={this.state.openModal} onClose={this.closeModal} center>\n\n\n                        <p className=\"float-center\"> Please enter your password to confirm. </p>\n\n                        <div className=\"form-group\">\n                            <label> Password </label>\n                            <Input onChange={this.confirmOldPass} id=\"phone\" name=\"phone\" type=\"tel\" required className=\"form-control\" placeholder=\"Enter password\" />\n                        </div>\n\n                        <Button onClick={this.updateUserEmail} className=\"btn-block border-0\" style={{'color': 'white'}}> Confirm Changes </Button>\n\n                            \n                </Modal>\n\n                <Modal \n                        classNames={{\n                        overlay: 'customOverlay',\n                        modal: 'customModal',\n                        }} open={this.state.openModalPassword} onClose={this.closeModalPassword} center>\n\n\n                        <p className=\"float-center\"> Please enter your password to confirm. </p>\n\n                        <div className=\"form-group\">\n                            <label> Password </label>\n                            <Input onChange={this.confirmOldPass} id=\"phone\" name=\"phone\" type=\"tel\" required className=\"form-control\" placeholder=\"Enter password\" />\n                            <Button onClick={this.updateUserPassword} className=\"btn-block border-0\" style={{'color': 'white'}}> Confirm Changes </Button>\n                        </div>\n\n                </Modal>\n\n                 <p className=\"forgot-password text-right\">\n                 </p>\n\n                 </Form>\n                 </Col>\n\n                 <Col lg={3} md={6} sm={6} xs={12} >\n\n                <br></br>\n\n                <Card style={{'border-radius': '2px', 'background': 'white'}}>\n                 <CardBody>\n                 <div class=\"card-body\">\n                    <p > Current User </p>\n                    <p > Email: {this.state.currentEmail} </p>\n                    <p> Name: {this.state.currentName} </p>\n\n\n\n                </div>\n                 </CardBody>\n             </Card>  \n\n                 </Col>\n\n                 </Row>\n            </Page>\n        )\n    }\n}\n\nexport default UpdateUserInfo;"],"sourceRoot":""}